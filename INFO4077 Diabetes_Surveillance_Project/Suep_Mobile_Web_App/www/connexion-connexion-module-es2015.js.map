{"version":3,"sources":["./src/app/connexion/connexion.page.html","./src/app/connexion/connexion-routing.module.ts","./src/app/connexion/connexion.module.ts","./src/app/connexion/connexion.page.scss","./src/app/connexion/connexion.page.ts"],"names":[],"mappings":"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","file":"connexion-connexion-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border ion-padding\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"dark\\\" icon=\\\"arrow-back-outline\\\" defaultHref=\\\"/home\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Connexion</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"connexion(form)\\\">\\n    <ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Votre adresse email</ion-label>\\n        <ion-input name=\\\"identifiant\\\" ngModel required inputmode=\\\"email\\\" autocomplete=\\\"true\\\" type=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Votre mot de passe</ion-label>\\n        <ion-input name=\\\"password\\\" ngModel required inputmode=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <div class=\\\"ion-padding ion-margin-top\\\">\\n      <ion-button mode=\\\"ios\\\" expand=\\\"block\\\" shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"ion-no-margin\\\">Se connecter</ion-button>\\n    </div>\\n    <div class=\\\"ion-padding ion-text-center\\\">\\n      <ion-text [style.fontWeight]=\\\"'bold'\\\" [style.fontSize]=\\\"'13px'\\\" color=\\\"dark\\\"><span class=\\\"ion-margin-vertical\\\" (click)=\\\"presentResetPassword()\\\">J'ai oublié mon mot de passe</span></ion-text>\\n    </div>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConnexionPage } from './connexion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnexionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConnexionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnexionPageRoutingModule } from './connexion-routing.module';\n\nimport { ConnexionPage } from './connexion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConnexionPageRoutingModule\n  ],\n  declarations: [ConnexionPage]\n})\nexport class ConnexionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5leGlvbi9jb25uZXhpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {AlertController, LoadingController, NavController} from '@ionic/angular';\nimport {AuthentificationService} from '../services/authentification.service';\nimport {AppComponent} from '../app.component';\n\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.page.html',\n  styleUrls: ['./connexion.page.scss'],\n})\nexport class ConnexionPage implements OnInit {\n\n  private isLoading = false;\n\n  constructor(private appComponant: AppComponent, private navCtrl: NavController, private loadingController: LoadingController, private alertController: AlertController, private authService: AuthentificationService) { }\n\n  ngOnInit() {\n  }\n\n  connexion(form) {\n\n    this.present();\n\n    this.authService.signInUser(form.value.identifiant, form.value.password).then(\n        () => {\n          this.dismiss();\n          this.appComponant.afficheMenu = false;\n          this.navCtrl.navigateForward('folder');\n        },\n        (error) => { /*\n          if (error.toString().search('formatted') > -1)\n            this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n          else if (error.toString().search('no user') > -1)\n            this.notification('Identifiant ou mot de passe invalide. Veillez reesayer', 'danger');\n          else\n            this.notification('Une erreur est survenue, veillez reesayer plutard', 'danger');\n          this.dismiss(); */\n        }\n    );\n  }\n\n  async present() {\n    this.isLoading = true;\n    return await this.loadingController.create({\n      message: 'Veillez patienter...',\n    }).then(a => {\n      a.present().then(() => {\n        if (!this.isLoading) {\n          a.dismiss();\n        }\n      });\n    });\n  }\n\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController.dismiss();\n  }\n\n  async presentResetPassword() {\n    const alert = await this.alertController.create({\n      header: 'Mot de passe oublié ?',\n      message: 'Entrez l\\'adresse email de votre compte. Nous enverrons un email à cette adresse.',\n      inputs: [\n        {\n          name: 'emailRecup',\n          type: 'text',\n          placeholder: 'Email'\n        }],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Réinitialiser',\n          handler: (data) => {\n            return new Promise(() => {\n              this.authService.resetPassword(data.emailRecup).then(\n                  () => {\n                    this.dismiss();\n                    // this.notification('Les informations de reinitialisation ont été envoyer a votre adresse email', 'dark');\n                  },\n                  (error) => { /*\n                    if (error.toString().search('formatted') > -1)\n                      this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n                    else if (error.toString().search('no user') > -1)\n                      this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n                    else\n                      this.notification('Une erreur est survenue, veillez reesayer plutard', 'danger');\n                    this.dismiss(); */\n                  }\n              );\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}