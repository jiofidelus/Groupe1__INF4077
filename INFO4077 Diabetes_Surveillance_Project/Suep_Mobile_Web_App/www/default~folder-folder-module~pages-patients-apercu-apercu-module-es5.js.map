{"version":3,"sources":["webpack:///src/app/pages/patients/apercu/apercu.page.html","webpack:///node_modules/recordrtc/RecordRTC.js","webpack:///src/app/models/symptome.ts","webpack:///src/app/pages/patients/apercu/apercu.page.scss","webpack:///src/app/pages/patients/apercu/apercu.page.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/symptome.service.ts"],"names":["RecordRTC","mediaStream","config","type","RecordRTCConfiguration","self","startRecording","config2","disableLogs","console","log","version","mediaRecorder","clearRecordedData","record","setState","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","constructor","name","stopRecording","callback","warningLog","state","resumeRecording","setTimeout","warn","stop","_callback","__blob","call","Object","keys","forEach","key","blob","bytesToSize","size","url","URL","createObjectURL","e","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","pauseRecording","pause","resume","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","navigator","mozGetUserMedia","webWorker","processInWebWorker","onmessage","event","data","reader","FileReader","onload","target","result","_function","Blob","toString","worker","revokeObjectURL","counter","onRecordingStopped","onStateChanged","WARNING","returnObject","setRecordingDuration","getBlob","toURL","getInternalRecorder","save","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","length","i","push","duration","image","bufferSize","sampleRate","buffer","reset","getState","destroy","disableLogsCache","Storage","AudioContextConstructor","close","prop","module","exports","Fetch","_type","replace","writeToDisk","options","audio","video","gif","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","MediaRecorder","prototype","mimeType","split","bitsPerSecond","recorder","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","Array","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","videoTrack","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","output","_audioDataURL","_videoDataURL","callback00","webkitURL","args","browserFakeUserAgent","that","window","global","userAgent","getUserMedia","error","arguments","document","documentElement","appendChild","createElement","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","style","HTMLVideoElement","location","protocol","href","hash","screen","width","height","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","Date","getTime","timeToCall","Math","max","id","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","indexOf","msSaveBlob","msSaveOrOpenBlob","opera","toLowerCase","test","isElectron","webkitMediaStream","track","bytes","k","sizes","parseInt","floor","pow","toPrecision","file","fileExtension","splitted","fileFullName","round","random","hyperlink","download","body","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","process","versions","electron","stream","kind","filter","t","setSrcObject","srcObject","mozSrcObject","getSeekableBlob","inputBlob","EBML","Error","Reader","decoder","Decoder","tools","fileReader","ebmlElms","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","slice","metadataSize","newBlob","readAsArrayBuffer","nVer","appVersion","nAgt","fullVersion","parseFloat","majorVersion","nameOffset","verOffset","ix","substring","isNaN","arrayOfBlobs","getArrayOfBlobs","timestamps","allStates","recorderHints","canRecordMimeType","ondataavailable","updateTimeStamp","getNativeBlob","getMimeType","recordingCallback","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","start","secondObject","clearRecordedDataCB","isMediaStreamActive","active","ended","getAllStates","checkForInactiveTracks","leftchannel","rightchannel","recording","recordingLength","jsAudioNode","desiredSampRate","leftChannel","resetVariables","isAudioProcessStarted","isPaused","mergeLeftRightBuffers","mergeAudioBuffers","cb","leftBuffers","rightBuffers","internalInterleavedLength","mergeBuffers","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","atPoint","linearInterpolate","channelBuffer","rLength","Float64Array","offset","lng","set","interleave","rightChannel","inputIndex","index","writeUTFBytes","string","setUint8","charCodeAt","interleaved","interleavedLength","resultingBufferLength","ArrayBuffer","DataView","setUint32","setUint16","volume","setInt16","noWorker","workerURL","terminate","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessDataAvailable","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","match","useWhammyRecorder","globalCanvas","mediaStreamRecorder","HTMLCanvasElement","CanvasRenderingContext2D","isRecording","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","cloneNode","onloadedmetadata","muted","drawFrames","paused","isStopDrawing","asyncLoop","o","loop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","r","g","b","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","src","concat","_this","WhammyVideo","add","whammyInWebWorker","ArrayToWebM","info","checkFrames","clusterMaxDuration","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","map","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","num","parts","Uint8Array","reverse","strToBuffer","str","bitsToBuffer","bits","pad","join","substr","json","ebml","len","zeroes","sizeToString","padded","toBinStrOld","String","fromCharCode","flags","out","parseWebP","riff","VP8","RIFF","WEBP","frameStart","c","getStrLength","unpadded","parseRIFF","chunks","webm","atob","init","indexedDB","open","dbVersion","dbName","db","request","createObjectStore","dataBase","dataStoreName","putInDB","transaction","objectStore","put","getFromStore","portionName","get","onsuccess","onError","setVersion","onupgradeneeded","GIFEncoder","script","isHTMLObject","isLoadedMetaData","offsetWidth","offsetHeight","gifEncoder","setRepeat","setDelay","setQuality","onGifRecordingStarted","startTime","now","drawVideoFrame","time","clearedRecordedData","lastAnimationFrame","lastFrameTime","undefined","onGifPreview","addFrame","endTime","bin","autoplay","playsInline","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","position","zIndex","top","className","useGainNode","startDrawingFrames","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","y","onRender","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","resetVideoStreams","capturedStream","videoStream","audioContext","audioSources","gainNode","createGain","gain","value","audioTracksLength","audioSource","audioDestination","getVideo","appendStreams","streams","releaseStreams","source","clearRect","mixer","getAllVideoTracks","previewStream","tracks","addStreams","getMixer","RecordRTCPromisesHandler","recordRTC","Promise","resolve","reject","WritableStream","realtime","createBufferURL","finished","cameraStream","controller","cvs","first","onplaying","ctx","frameTimeout","cameraTimer","setInterval","clearInterval","onVideoProcessStarted","_controlledReadableStream","enqueue","fetch","then","arrayBuffer","addEventListener","timebaseDen","pipeTo","write","arrayOfBuffers","Symptome","idPatient","texte","voice","date","ApercuPage","apiService","domSanitizer","alertService","symptomeService","alertController","navParams","modalCtrl","patient","isLoading","symptomes","firestore","collection","doc","onSnapshot","docRef","where","docRef1","appel","bypassSecurityTrustUrl","mediaConstraints","mediaDevices","successCallback","bind","errorCallback","sendToServer","onloadend","base64data","addRecordForAdresseId","email","sympt","AjouterSymptome","print","dismissModal","create","header","message","inputs","placeholder","buttons","text","role","cssClass","handler","symptome","alert","present","dismiss","dismissed","selector","template","AlertService","toastController","couleur","color","toast","providedIn","ApiService","adresse","imgStorageRef","storage","ref","newPhoto","putString","contentType","getDownloadURL","downloadUrl","waveStorageRef","newWave","SymptomeService","symp","assign"],"mappings":"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","file":"default~folder-folder-module~pages-patients-apercu-apercu-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">Fermer</ion-button>\\n    </ion-buttons>\\n    <ion-title>Profil</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"delPatient()\\\"><ion-icon name=\\\"trash\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-progress-bar color=\\\"secondary\\\" *ngIf=\\\"isLoading\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"patient\\\">\\n  <div class=\\\"ion-text-center ion-padding-vertical\\\">\\n    <img class=\\\"profil\\\" [src]=\\\"patient.photo ? patient.photo : '../assets/img/user.png'\\\">\\n    <h3 [style.textTransform]=\\\"'capitalize'\\\">\\n      {{patient.nom + ' ' + patient.prenom}}\\n    </h3>\\n    <h6 [style.textTransform]=\\\"'capitalize'\\\">\\n      {{patient.email}}\\n    </h6>\\n    <p class=\\\"ion-padding-horizontal\\\">\\n      {{ patient.description }}\\n    </p>\\n  </div>\\n\\n  <ion-list>\\n    <ion-list-header>\\n      Symptomes\\n    </ion-list-header>\\n\\n    <ion-item [disabled]=\\\"isLoading\\\" button=\\\"true\\\" (click)=\\\"addDescriptionSymptome()\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../assets/img/plus.png\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <h2>Ajouter un symptôme</h2>\\n        <h3>Texte</h3>\\n        <p>Vous pouvez ajouter une description textuelle du symptome du patient</p>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item [disabled]=\\\"isLoading\\\" [button]=\\\"!recording\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"recording ? '../assets/img/headphone.gif' : '../assets/img/plus.png'\\\">\\n      </ion-avatar>\\n      <ion-label (click)=\\\"initiateRecording()\\\">\\n        <h2>Ajouter un symptôme</h2>\\n        <h3>Enregistrement audio</h3>\\n        <p>{{ recording ? 'Record en cours...' : 'Vous pouvez faire un voice du symptôme' }}</p>\\n      </ion-label>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" mode=\\\"ios\\\" *ngIf=\\\"recording\\\" (click)=\\\"stopRecording()\\\">\\n                <ion-icon color=\\\"danger\\\" slot=\\\"icon-only\\\" name=\\\"stop\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clearine\\\" mode=\\\"ios\\\" *ngIf=\\\"recording\\\" (click)=\\\"sendRecording()\\\">\\n                <ion-icon color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"paper-plane\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-item>\\n\\n    <ion-item *ngFor=\\\"let symptome of symptomes; let i = index\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../assets/img/virus.png\\\">\\n      </ion-avatar>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>Symptome {{i+1}}</h2>\\n        <h3>Informations</h3>\\n        <p *ngIf=\\\"symptome.texte\\\">{{ symptome.texte }}</p>\\n          <p *ngIf=\\\"symptome.voice\\\">\\n              <audio style=\\\"width: 100%\\\" controls=\\\"\\\">\\n                  <source [src]=\\\"sanitize(symptome.voice)\\\" type=\\\"audio/wav\\\">\\n              </audio>\\n          </p>\\n      </ion-label>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" mode=\\\"ios\\\" (click)=\\\"delSymptome(symptome.id)\\\">\\n                <ion-icon color=\\\"danger\\\" slot=\\\"icon-only\\\" name=\\\"trash-bin\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n    </ion-item>\\n\\n  </ion-list>\\n</ion-content>\\n\";","'use strict';\r\n\r\n// Last time updated: 2020-05-17 5:04:38 PM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.1\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.1'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.1';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size && e.data.size > 100) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.1';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\r\n","export class Symptome {\r\n    date: string;\r\n    id: string;\r\n\r\n    constructor(public idPatient: string, public texte: string, public voice: string) {\r\n        this.date = new Date().toString();\r\n    }\r\n}\r\n","export default \".profil {\\n  max-width: 170px;\\n  max-height: 170px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudHMvYXBlcmN1L2FwZXJjdS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXRpZW50cy9hcGVyY3UvYXBlcmN1LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWwge1xyXG4gICAgbWF4LXdpZHRoOiAxNzBweDtcclxuICAgIG1heC1oZWlnaHQ6IDE3MHB4O1xyXG4gIH0iXX0= */\";","import {Component, Injectable, OnInit} from '@angular/core';\nimport {AlertController, ModalController, NavParams} from '@ionic/angular';\nimport firebase from 'firebase';\nimport { Patient } from 'src/app/models/patient';\nimport {SymptomeService} from '../../../services/symptome.service';\nimport {Symptome} from '../../../models/symptome';\nimport {AlertService} from '../../../services/alert.service';\n\n\nimport * as RecordRTC from 'recordrtc';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {ApiService} from '../../../services/api.service';\n\n\n@Component({\n  selector: 'app-apercu',\n  templateUrl: './apercu.page.html',\n  styleUrls: ['./apercu.page.scss'],\n})\nexport class ApercuPage implements OnInit {\n\n    patient: Patient = null;\n    isLoading = false;\n    symptomes: Symptome[] = [];\n\n    record = null;\n    recording = false;\n    url;\n    error;\n\n  constructor(private apiService: ApiService, private domSanitizer: DomSanitizer, private alertService: AlertService, private symptomeService: SymptomeService, private alertController: AlertController, private navParams: NavParams, private modalCtrl: ModalController) { }\n\n  ngOnInit() {\n    firebase.firestore().collection('patients').doc(this.navParams.get('id')).onSnapshot(\n      (docRef: any) => {\n        this.patient = docRef.data();\n        this.patient.id = docRef.id;\n        firebase.firestore().collection('symptomes').where('idPatient', '==', this.navParams.get('id')).onSnapshot(\n            (docRef1) => {\n              this.symptomes = [];\n              const appel = this;\n              docRef1.forEach(function(doc) {\n                const tmp = doc.data() as Symptome;\n                tmp.id = doc.id;\n                appel.symptomes.push(tmp);\n              });\n            }\n        );\n      }\n    );\n  }\n\n  // Record voice\n\n    sanitize(url: string) {\n        return this.domSanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    initiateRecording() {\n        this.recording = true;\n        const mediaConstraints = {\n            video: false,\n            audio: true\n        };\n        navigator.mediaDevices.getUserMedia(mediaConstraints).then(this.successCallback.bind(this), this.errorCallback.bind(this));\n    }\n\n    successCallback(stream) {\n        const options = {\n            mimeType: 'audio/wav',\n            numberOfAudioChannels: 1,\n            sampleRate: 16000,\n        };\n\n        const StereoAudioRecorder = RecordRTC.StereoAudioRecorder;\n        this.record = new StereoAudioRecorder(stream, options);\n        this.record.record();\n    }\n\n    stopRecording() {\n        this.recording = false;\n        this.record.stop();\n    }\n\n    errorCallback(error) {\n        this.error = 'Can not play audio in your browser';\n    }\n\n    sendRecording() {\n        this.recording = false;\n        this.record.stop(this.sendToServer.bind(this));\n    }\n\n    sendToServer(blob) {\n        this.isLoading = true;\n\n        const reader = new FileReader();\n        const appel = this;\n        reader.readAsDataURL(blob);\n        reader.onloadend = function() {\n            const base64data = reader.result;\n            appel.apiService.addRecordForAdresseId( 'PEGUY' , 'symptomes/' + appel.patient.email + '/' + Math.floor(Math.random() * (99999 - 10001 + 1)) + 10000, base64data.toString()).then(\n                (docRef: string) => {\n                    const sympt = new Symptome(appel.patient.id, '', docRef);\n                    appel.symptomeService.AjouterSymptome(sympt).then(\n                        () => {\n                            appel.alertService.print('Symptome ajouté', 'dark');\n                            appel.isLoading = false;\n                        },\n                        (error) => {\n                            appel.alertService.print('Une erreur est survenue, veuillez reesayer', 'danger');\n                            appel.isLoading = false;\n                        }\n                    );\n                },\n                (error) => {\n                    appel.isLoading = false;\n                    appel.alertService.print('Une erreur est survenue lors de l\\'opération, veillez reesayer', 'danger');\n                }\n            );\n        };\n    }\n    // Fin\n\n  async delPatient() {\n      this.isLoading = true;\n      firebase.firestore().collection('patients').doc(this.navParams.get('id')).delete().then(\n          () => {\n              this.dismissModal();\n              this.alertService.print('Le patient à été supprimé', 'dark');\n          },\n          () => {\n              this.alertService.print('Une erreur est survenue, veuillez reesayer', 'danger');\n              this.isLoading = false;\n          }\n      );\n  }\n\n  async delSymptome(id) {\n      this.isLoading = true;\n      firebase.firestore().collection('symptomes').doc(id).delete().then(\n          () => {\n              this.isLoading = false;\n              this.alertService.print('Le symptome à été supprimé', 'dark');\n          },\n          () => {\n              this.alertService.print('Une erreur est survenue, veuillez reesayer', 'danger');\n              this.isLoading = false;\n          }\n      );\n    }\n\n  async addDescriptionSymptome() {\n    const alert = await this.alertController.create({\n      header: 'Ajout symptome',\n      message: 'Vous pouvez ajouter une description textuelle du symptome du patient.',\n      inputs: [\n        {\n          name: 'symptome',\n          type: 'textarea',\n          placeholder: 'Description symptome'\n        }],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Ajouter',\n          handler: (data) => {\n            this.isLoading = true;\n            return new Promise(() => {\n              this.symptomeService.AjouterSymptome(new Symptome(this.navParams.get('id'), data.symptome, '')).then(\n                  () => {\n                    this.alertService.print('Le symptome à été ajouté', 'dark');\n                    this.isLoading = false;\n                  },\n                  () => {\n                    this.alertService.print('Une erreur est survenue, veuillez reesayer', 'danger');\n                    this.isLoading = false;\n                  }\n              );\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  dismissModal() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ToastController} from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private toastController: ToastController) { }\n\n  async print(texte: string, couleur: string) {\n    const toast = await this.toastController.create({\n      message: texte,\n      duration: 5000,\n      color: couleur,\n      position: 'top'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor() { }\n\n  async addImageForAdresseId(name: string, adresse: string, image: SafeResourceUrl ) {\n    return new Promise((resolve, reject) => {\n      if(image === '') {\n        resolve('');\n      } else {\n        const imgStorageRef = firebase.storage().ref(adresse + '/' + name + '.png');\n        const newPhoto: string = image.toString().substring(image.toString().indexOf('base64,') + 7, image.toString().indexOf('(see ') - 1);\n        return imgStorageRef.putString(newPhoto, 'base64', {contentType: 'image/png'}).then(\n            () => {\n              return imgStorageRef.getDownloadURL().then(downloadUrl => {\n                resolve(downloadUrl);\n              });\n            },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    });\n  }\n\n    async addRecordForAdresseId(name: string, adresse: string, record: string ) {\n        return new Promise((resolve, reject) => {\n            if(record === '') {\n                resolve('');\n            } else {\n                const waveStorageRef = firebase.storage().ref(adresse + '/' + name + '.wav');\n                // tslint:disable-next-line:max-line-length\n                const newWave: string = record.replace('data:audio/wav;base64,', '');\n                return waveStorageRef.putString(newWave, 'base64', {contentType: 'audio/wav'}).then(\n                    () => {\n                        return waveStorageRef.getDownloadURL().then(downloadUrl => {\n                            resolve(downloadUrl);\n                        });\n                    },\n                    (error) => {\n                        reject(error);\n                    }\n                );\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase';\nimport {Symptome} from '../models/symptome';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SymptomeService {\n\n  constructor() { }\n\n  async AjouterSymptome(symp: Symptome) {\n    return new Promise((resolve, reject) => {\n      firebase.firestore().collection('symptomes').doc().set(Object.assign({}, symp)).then(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n      );\n    });\n  }\n}\n"]}