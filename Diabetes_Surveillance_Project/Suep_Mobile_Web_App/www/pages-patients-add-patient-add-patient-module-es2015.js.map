{"version":3,"sources":["./src/app/pages/patients/add-patient/add-patient-routing.module.ts","./src/app/pages/patients/add-patient/add-patient.module.ts","./src/app/services/alert.service.ts","./src/app/services/api.service.ts"],"names":[],"mappings":"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","file":"pages-patients-add-patient-add-patient-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPatientPage } from './add-patient.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPatientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPatientPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPatientPageRoutingModule } from './add-patient-routing.module';\n\nimport { AddPatientPage } from './add-patient.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        AddPatientPageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [AddPatientPage]\n})\nexport class AddPatientPageModule {}\n","import { Injectable } from '@angular/core';\nimport {ToastController} from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private toastController: ToastController) { }\n\n  async print(texte: string, couleur: string) {\n    const toast = await this.toastController.create({\n      message: texte,\n      duration: 5000,\n      color: couleur,\n      position: 'top'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor() { }\n\n  async addImageForAdresseId(name: string, adresse: string, image: SafeResourceUrl ) {\n    return new Promise((resolve, reject) => {\n      if(image === '') {\n        resolve('');\n      } else {\n        const imgStorageRef = firebase.storage().ref(adresse + '/' + name + '.png');\n        const newPhoto: string = image.toString().substring(image.toString().indexOf('base64,') + 7, image.toString().indexOf('(see ') - 1);\n        return imgStorageRef.putString(newPhoto, 'base64', {contentType: 'image/png'}).then(\n            () => {\n              return imgStorageRef.getDownloadURL().then(downloadUrl => {\n                resolve(downloadUrl);\n              });\n            },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    });\n  }\n\n    async addRecordForAdresseId(name: string, adresse: string, record: string ) {\n        return new Promise((resolve, reject) => {\n            if(record === '') {\n                resolve('');\n            } else {\n                const waveStorageRef = firebase.storage().ref(adresse + '/' + name + '.wav');\n                // tslint:disable-next-line:max-line-length\n                const newWave: string = record.replace('data:audio/wav;base64,', '');\n                return waveStorageRef.putString(newWave, 'base64', {contentType: 'audio/wav'}).then(\n                    () => {\n                        return waveStorageRef.getDownloadURL().then(downloadUrl => {\n                            resolve(downloadUrl);\n                        });\n                    },\n                    (error) => {\n                        reject(error);\n                    }\n                );\n            }\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}