{"version":3,"sources":["webpack:///src/app/connexion/connexion.page.html","webpack:///src/app/connexion/connexion-routing.module.ts","webpack:///src/app/connexion/connexion.module.ts","webpack:///src/app/connexion/connexion.page.scss","webpack:///src/app/connexion/connexion.page.ts"],"names":["routes","path","component","ConnexionPageRoutingModule","imports","forChild","exports","ConnexionPageModule","declarations","ConnexionPage","appComponant","navCtrl","loadingController","alertController","authService","isLoading","form","present","signInUser","value","identifiant","password","then","dismiss","afficheMenu","navigateForward","error","create","message","a","header","inputs","name","type","placeholder","buttons","text","role","cssClass","handler","data","Promise","resetPassword","emailRecup","alert","selector","template"],"mappings":"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","file":"connexion-connexion-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border ion-padding\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"dark\\\" icon=\\\"arrow-back-outline\\\" defaultHref=\\\"/home\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Connexion</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"connexion(form)\\\">\\n    <ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Votre adresse email</ion-label>\\n        <ion-input name=\\\"identifiant\\\" ngModel required inputmode=\\\"email\\\" autocomplete=\\\"true\\\" type=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Votre mot de passe</ion-label>\\n        <ion-input name=\\\"password\\\" ngModel required inputmode=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <div class=\\\"ion-padding ion-margin-top\\\">\\n      <ion-button mode=\\\"ios\\\" expand=\\\"block\\\" shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"ion-no-margin\\\">Se connecter</ion-button>\\n    </div>\\n    <div class=\\\"ion-padding ion-text-center\\\">\\n      <ion-text [style.fontWeight]=\\\"'bold'\\\" [style.fontSize]=\\\"'13px'\\\" color=\\\"dark\\\"><span class=\\\"ion-margin-vertical\\\" (click)=\\\"presentResetPassword()\\\">J'ai oublié mon mot de passe</span></ion-text>\\n    </div>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConnexionPage } from './connexion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnexionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConnexionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnexionPageRoutingModule } from './connexion-routing.module';\n\nimport { ConnexionPage } from './connexion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConnexionPageRoutingModule\n  ],\n  declarations: [ConnexionPage]\n})\nexport class ConnexionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5leGlvbi9jb25uZXhpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {AlertController, LoadingController, NavController} from '@ionic/angular';\nimport {AuthentificationService} from '../services/authentification.service';\nimport {AppComponent} from '../app.component';\n\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.page.html',\n  styleUrls: ['./connexion.page.scss'],\n})\nexport class ConnexionPage implements OnInit {\n\n  private isLoading = false;\n\n  constructor(private appComponant: AppComponent, private navCtrl: NavController, private loadingController: LoadingController, private alertController: AlertController, private authService: AuthentificationService) { }\n\n  ngOnInit() {\n  }\n\n  connexion(form) {\n\n    this.present();\n\n    this.authService.signInUser(form.value.identifiant, form.value.password).then(\n        () => {\n          this.dismiss();\n          this.appComponant.afficheMenu = false;\n          this.navCtrl.navigateForward('folder');\n        },\n        (error) => { /*\n          if (error.toString().search('formatted') > -1)\n            this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n          else if (error.toString().search('no user') > -1)\n            this.notification('Identifiant ou mot de passe invalide. Veillez reesayer', 'danger');\n          else\n            this.notification('Une erreur est survenue, veillez reesayer plutard', 'danger');\n          this.dismiss(); */\n        }\n    );\n  }\n\n  async present() {\n    this.isLoading = true;\n    return await this.loadingController.create({\n      message: 'Veillez patienter...',\n    }).then(a => {\n      a.present().then(() => {\n        if (!this.isLoading) {\n          a.dismiss();\n        }\n      });\n    });\n  }\n\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController.dismiss();\n  }\n\n  async presentResetPassword() {\n    const alert = await this.alertController.create({\n      header: 'Mot de passe oublié ?',\n      message: 'Entrez l\\'adresse email de votre compte. Nous enverrons un email à cette adresse.',\n      inputs: [\n        {\n          name: 'emailRecup',\n          type: 'text',\n          placeholder: 'Email'\n        }],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Réinitialiser',\n          handler: (data) => {\n            return new Promise(() => {\n              this.authService.resetPassword(data.emailRecup).then(\n                  () => {\n                    this.dismiss();\n                    // this.notification('Les informations de reinitialisation ont été envoyer a votre adresse email', 'dark');\n                  },\n                  (error) => { /*\n                    if (error.toString().search('formatted') > -1)\n                      this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n                    else if (error.toString().search('no user') > -1)\n                      this.notification('Adresse email invalide. Veillez reesayer', 'danger');\n                    else\n                      this.notification('Une erreur est survenue, veillez reesayer plutard', 'danger');\n                    this.dismiss(); */\n                  }\n              );\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"]}