{"version":3,"sources":["webpack:///src/app/pages/patients/add-patient/add-patient-routing.module.ts","webpack:///src/app/pages/patients/add-patient/add-patient.module.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/app/services/api.service.ts"],"names":["routes","path","component","AddPatientPageRoutingModule","imports","forChild","exports","AddPatientPageModule","declarations","AlertService","toastController","texte","couleur","create","message","duration","color","position","toast","present","providedIn","ApiService","name","adresse","image","Promise","resolve","reject","imgStorageRef","storage","ref","newPhoto","toString","substring","indexOf","putString","contentType","then","getDownloadURL","downloadUrl","error","record","waveStorageRef","newWave","replace"],"mappings":"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","file":"pages-patients-add-patient-add-patient-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPatientPage } from './add-patient.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPatientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPatientPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPatientPageRoutingModule } from './add-patient-routing.module';\n\nimport { AddPatientPage } from './add-patient.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        AddPatientPageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [AddPatientPage]\n})\nexport class AddPatientPageModule {}\n","import { Injectable } from '@angular/core';\nimport {ToastController} from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private toastController: ToastController) { }\n\n  async print(texte: string, couleur: string) {\n    const toast = await this.toastController.create({\n      message: texte,\n      duration: 5000,\n      color: couleur,\n      position: 'top'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor() { }\n\n  async addImageForAdresseId(name: string, adresse: string, image: SafeResourceUrl ) {\n    return new Promise((resolve, reject) => {\n      if(image === '') {\n        resolve('');\n      } else {\n        const imgStorageRef = firebase.storage().ref(adresse + '/' + name + '.png');\n        const newPhoto: string = image.toString().substring(image.toString().indexOf('base64,') + 7, image.toString().indexOf('(see ') - 1);\n        return imgStorageRef.putString(newPhoto, 'base64', {contentType: 'image/png'}).then(\n            () => {\n              return imgStorageRef.getDownloadURL().then(downloadUrl => {\n                resolve(downloadUrl);\n              });\n            },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    });\n  }\n\n    async addRecordForAdresseId(name: string, adresse: string, record: string ) {\n        return new Promise((resolve, reject) => {\n            if(record === '') {\n                resolve('');\n            } else {\n                const waveStorageRef = firebase.storage().ref(adresse + '/' + name + '.wav');\n                // tslint:disable-next-line:max-line-length\n                const newWave: string = record.replace('data:audio/wav;base64,', '');\n                return waveStorageRef.putString(newWave, 'base64', {contentType: 'audio/wav'}).then(\n                    () => {\n                        return waveStorageRef.getDownloadURL().then(downloadUrl => {\n                            resolve(downloadUrl);\n                        });\n                    },\n                    (error) => {\n                        reject(error);\n                    }\n                );\n            }\n        });\n    }\n}\n"]}